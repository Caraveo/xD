import{_ as e,o as a,c as t,S as s}from"./chunks/framework.7e4339c5.js";const g=JSON.parse('{"title":"Define a Variable TYPE","description":"","frontmatter":{},"headers":[],"relativePath":"type.md","filePath":"type.md"}'),n={name:"type.md"},l=s('<h1 id="define-a-variable-type" tabindex="-1">Define a Variable TYPE <a class="header-anchor" href="#define-a-variable-type" aria-label="Permalink to &quot;Define a Variable TYPE&quot;">​</a></h1><p>A variable should be defined with a type. Generally, you can define and set a variable by using the following syntax:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;TYPE&gt; &lt;NAME&gt;: &lt;VALUE&gt;</span></span></code></pre></div><p>TYPE is the type of variable you are defining. NAME is the name of the variable. VALUE is what you want the variable to be set to.</p><p>This can be any of the following:</p><hr><h1 id="string" tabindex="-1">STRING <a class="header-anchor" href="#string" aria-label="Permalink to &quot;STRING&quot;">​</a></h1><p>Define a String Variable</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">STRING Welcome: &quot;Hello World!&quot;</span></span></code></pre></div><hr><h1 id="index" tabindex="-1">INDEX <a class="header-anchor" href="#index" aria-label="Permalink to &quot;INDEX&quot;">​</a></h1><p>Array/Dictionary/LIST type. Can be used as an index.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">INDEX Greetings: [&quot;Hello&quot;, &quot;Hey!&quot;, &quot;Hi!&quot;]</span></span></code></pre></div><hr><h1 id="float" tabindex="-1">FLOAT <a class="header-anchor" href="#float" aria-label="Permalink to &quot;FLOAT&quot;">​</a></h1><p>Extended Float High Precision - Memory intensive</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FLOAT Float: 12.0</span></span></code></pre></div><hr><h1 id="integer" tabindex="-1">INTEGER <a class="header-anchor" href="#integer" aria-label="Permalink to &quot;INTEGER&quot;">​</a></h1><p>Define and Assign an integer.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">INTEGER Int: 10</span></span></code></pre></div><hr><h1 id="bool" tabindex="-1">BOOL <a class="header-anchor" href="#bool" aria-label="Permalink to &quot;BOOL&quot;">​</a></h1><p>Bool Check with Safe Check.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">BOOL Check: TRUE/FALSE/EXIST</span></span></code></pre></div><hr><h1 id="object" tabindex="-1">OBJECT <a class="header-anchor" href="#object" aria-label="Permalink to &quot;OBJECT&quot;">​</a></h1><p>JSON Object-like based Indexing System</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">OBJECT Obj: { &quot;Key&quot;: &quot;Value&quot; }</span></span></code></pre></div><hr><p>Required: Types should be ALL-Caps and should be defined before the variable name. The variable should be defined in Camel-Case: Meaning first letter capitalized and the rest lowercase, while spaces should NOT be used when defining variable names.</p>',31),i=[l];function o(r,p,c,d,h,u){return a(),t("div",null,i)}const y=e(n,[["render",o]]);export{g as __pageData,y as default};
